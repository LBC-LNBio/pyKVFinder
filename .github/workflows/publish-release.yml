name: Python package build and publish

on:
  release:
    types: [created]
  push:
    branches: [master]

jobs:
  # sdist:
  # name: Build source distribution
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.8"
  #     - name: Build sdist
  #       run: |
  #         python setup.py sdist
  #     - name: Test sdist
  #       run: |
  #         python -m pip install dist/*.gz
  #         python -c "import pyKVFinder; print(pyKVFinder.__version__)"
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: sdist
  #         path: ./dist/*
  #     - name: Publish sdist
  #       env:
  #         TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
  #         TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  #       run: |
  #         pip install -U twine
  #         # twine upload dist/*.gz

  # manylinux:
  #   name: Build wheels on manylinux
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.x"
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install twine flake8
  #     - name: Lint with flake8 for syntax errors
  #       run: |
  #         pip install flake8
  #         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  #     - name: Build manylinux Python wheels
  #       uses: RalfG/python-wheels-manylinux-build@v0.6.0-manylinux2014_x86_64
  #       with:
  #         python-versions: "cp38-cp38 cp39-cp39 cp310-cp310 cp311-cp311"
  #         build-requirements: "cython numpy"
  #     - name: Publish wheels to PyPI
  #       env:
  #         TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
  #         TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  #       run: |
  #         pip install -U twine
  #         # twine upload dist/*-manylinux*.whl
  #       continue-on-error: true

<<<<<<< Updated upstream
  # macos:
  #   runs-on: macos-10.15
  #   env:
  #     TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
  #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  #     CC: /usr/local/bin/gcc-10
  #   strategy:
  #     matrix:
  #       python-version: ["3.8", "3.9", "3.10", "3.11"]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install dependencies
  #       run: |
  #         brew install swig gcc@10
  #     - name: build wheel
  #       run: |
  #         pip install --upgrade pip
  #         pip install wheel
  #         python setup.py bdist_wheel
  #     - name: upload wheel
  #       run: |
  #         pip install twine
  #         # twine upload dist/*
  #       continue-on-error: true

  # macos10:
  #   name: Build wheels on macos-10.15
  #   runs-on: macos-10.15
=======
  macos10:
    name: Build wheels on macos-10.15
    runs-on: macos-10.15
    env:
      CIBW_ARCHS_MACOS: "x86_64"
      MACOSX_DEPLOYMENT_TARGET: "10.13"
      CC: /usr/local/bin/gcc-10
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          brew install swig gcc@10
          pip3 install -r requirements.txt

      - name: Build wheels for CPython 3.8
        uses: pypa/cibuildwheel@v2.11.4
        env:
          CIBW_BUILD: "cp38-*"
          CIBW_BEFORE_BUILD: >-
            pip3 install certifi &&
            git clean -fxd build

      - name: Build wheels for CPython 3.9
        uses: pypa/cibuildwheel@v2.11.4
        env:
          CIBW_BUILD: "cp39-*"
          CIBW_BEFORE_BUILD: >-
            pip3 install certifi &&
            git clean -fxd build

      - name: Build wheels for CPython 3.10
        uses: pypa/cibuildwheel@v2.11.4
        env:
          CIBW_BUILD: "cp310-*"
          CIBW_BEFORE_BUILD: >-
            pip3 install certifi &&
            git clean -fxd build

      - name: Build wheels for CPython 3.11
        uses: pypa/cibuildwheel@v2.11.4
        env:
          CIBW_BUILD: "cp311-*"
          CIBW_BEFORE_BUILD: >-
            pip3 install certifi &&
            git clean -fxd build

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl
        continue-on-error: true
      
      - name: Upload wheels
        run: |
          pip install twine
          # twine upload ./wheelhouse/*.whl
        continue-on-error: true

  # macos11:
  #   name: Build wheels on macos-11
  #   runs-on: macos-11
>>>>>>> Stashed changes
  #   env:
  #     CIBW_ARCHS_MACOS: "x86_64"
  #     MACOSX_DEPLOYMENT_TARGET: "10.13"
  #     CC: /usr/local/bin/gcc-10
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Install dependencies
  #       run: |
  #         brew install swig gcc@10
  #         pip3 install -r requirements.txt

  #     - name: Build wheels for CPython 3.8
  #       uses: pypa/cibuildwheel@v2.11.4
  #       env:
  #         CIBW_BUILD: "cp38-*"
  #         CIBW_BEFORE_BUILD: >-
  #           pip3 install certifi &&
  #           git clean -fxd build

  #     - name: Build wheels for CPython 3.9
  #       uses: pypa/cibuildwheel@v2.11.4
  #       env:
  #         CIBW_BUILD: "cp39-*"
  #         CIBW_BEFORE_BUILD: >-
  #           pip3 install certifi &&
  #           git clean -fxd build

  #     - name: Build wheels for CPython 3.10
  #       uses: pypa/cibuildwheel@v2.11.4
  #       env:
  #         CIBW_BUILD: "cp310-*"
  #         CIBW_BEFORE_BUILD: >-
  #           pip3 install certifi &&
  #           git clean -fxd build

  #     - name: Build wheels for CPython 3.11
  #       uses: pypa/cibuildwheel@v2.11.4
  #       env:
  #         CIBW_BUILD: "cp311-*"
  #         CIBW_BEFORE_BUILD: >-
  #           pip3 install certifi &&
  #           git clean -fxd build

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: wheels
  #         path: ./wheelhouse/*.whl
  #       continue-on-error: true

  macos11-x86_64:
    name: Build wheels on macOS 11
    runs-on: macos-11
    env:
      CIBW_ARCHS_MACOS: "x86_64"
      CIBW_REPAIR_WHEEL_COMMAND_MACOS: ""
      CC: /usr/local/bin/gcc-11
      MACOSX_DEPLOYMENT_TARGET: 11.0
      _PYTHON_HOST_PLATFORM: macosx-11.0-x86_64
      ARCHFLAGS: "-arch x86_64"
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels for CPython 3.11
        uses: pypa/cibuildwheel@v2.11.4
        env:
          CIBW_BUILD: "cp311-*"
          CIBW_BEFORE_BUILD: >-
            pip install certifi &&
            pip install -r requirements.txt &&
            git clean -fxd build
      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl
          if-no-files-found: error  

  macos11-arm64:
    name: Build wheels on macOS 11
    runs-on: macos-11
    env:
      CIBW_ARCHS_MACOS: "arm64"
      CIBW_REPAIR_WHEEL_COMMAND_MACOS: ""
      CC: /usr/local/bin/gcc-11
      MACOSX_DEPLOYMENT_TARGET: 11.0
      _PYTHON_HOST_PLATFORM: macosx-11.0-arm64
      ARCHFLAGS: "-arch arm64"
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels for CPython 3.11
        uses: pypa/cibuildwheel@v2.11.4
        env:
          CIBW_BUILD: "cp311-*"
          CIBW_BEFORE_BUILD: >-
            pip install certifi &&
            pip install -r requirements.txt &&
            git clean -fxd build
      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl
          if-no-files-found: error  

  # macos11:
  #   name: Build wheels on macOS 11
  #   runs-on: ${{matrix.os}}
  #   env:
  #     CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
  #     CC: /usr/local/bin/gcc-11
  #     MACOSX_DEPLOYMENT_TARGET: 11.0
  #     _PYTHON_HOST_PLATFORM: macosx-11.0-x86_64
  #   strategy:
  #     matrix:
  #       os: [macos-11]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Build wheels for CPython 3.11
  #       uses: pypa/cibuildwheel@v2.11.4
  #       env:
  #         CIBW_BUILD: "cp311-*"
  #         # CIBW_SKIP: "*-musllinux*"
  #         # CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
  #         # CIBW_MANYLINUX_I686_IMAGE: manylinux2014
  #         CIBW_BEFORE_BUILD: >-
  #           pip install certifi &&
  #           pip install -r requirements.txt &&
  #           git clean -fxd build
  #         # _PYTHON_HOST_PLATFORM: macosx-11.0-x86_64
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: wheels
  #         path: ./wheelhouse/*.whl
  #         if-no-files-found: error  

  # macos11:
  #   name: Build wheels on macos-11
  #   runs-on: macos-11
  #   env:
  #     CIBW_ARCHS_MACOS: "x86_64"
  #     MACOSX_DEPLOYMENT_TARGET: 11.0
  #     _PYTHON_HOST_PLATFORM: macosx-11.0-x86_64
  #     CFLAGS: '-mmacosx-version-min=11 -lSystem'
  #     CC: /usr/local/bin/gcc-11

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Install dependencies
  #       run: |
  #         brew install swig gcc@11
  #         pip3 install -r requirements.txt

  #     - name: Build wheels for CPython 3.10
  #       uses: pypa/cibuildwheel@v2.11.4
  #       env:
  #         CIBW_BUILD: "cp310-*"
  #         CIBW_BEFORE_BUILD: >-
  #           pip3 install certifi &&
  #           git clean -fxd build

      # - name: Build wheels for CPython 3.9
      #   uses: pypa/cibuildwheel@v2.11.4
      #   env:
      #     CIBW_BUILD: "cp39-*"
      #     CIBW_BEFORE_BUILD: >-
      #       pip3 install certifi &&
      #       git clean -fxd build

      # - name: Build wheels for CPython 3.10
      #   uses: pypa/cibuildwheel@v2.11.4
      #   env:
      #     CIBW_BUILD: "cp310-*"
      #     CIBW_BEFORE_BUILD: >-
      #       pip3 install certifi &&
      #       git clean -fxd build

      # - name: Build wheels for CPython 3.11
      #   uses: pypa/cibuildwheel@v2.11.4
      #   env:
      #     CIBW_BUILD: "cp311-*"
      #     CIBW_BEFORE_BUILD: >-
      #       pip3 install certifi &&
      #       git clean -fxd build

      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: wheels
      #     path: ./wheelhouse/*.whl
      #   continue-on-error: true

  # macos12:
  #   name: Build wheels on macos-12
  #   runs-on: macos-12
  #   env:
  #     CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
  #     MACOSX_DEPLOYMENT_TARGET: "12.0"
  #     CC: /usr/local/bin/gcc-11

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Install dependencies
  #       run: |
  #         brew install swig gcc@11
  #         pip3 install -r requirements.txt

  #     - name: Build wheels for CPython 3.8
  #       uses: pypa/cibuildwheel@v2.11.4
  #       env:
  #         CIBW_BUILD: "cp38-*"
  #         CIBW_BEFORE_BUILD: >-
  #           pip3 install certifi &&
  #           git clean -fxd build

  #     - name: Build wheels for CPython 3.9
  #       uses: pypa/cibuildwheel@v2.11.4
  #       env:
  #         CIBW_BUILD: "cp39-*"
  #         CIBW_BEFORE_BUILD: >-
  #           pip3 install certifi &&
  #           git clean -fxd build

  #     - name: Build wheels for CPython 3.10
  #       uses: pypa/cibuildwheel@v2.11.4
  #       env:
  #         CIBW_BUILD: "cp310-*"
  #         CIBW_BEFORE_BUILD: >-
  #           pip3 install certifi &&
  #           git clean -fxd build

  #     - name: Build wheels for CPython 3.11
  #       uses: pypa/cibuildwheel@v2.11.4
  #       env:
  #         CIBW_BUILD: "cp311-*"
  #         CIBW_BEFORE_BUILD: >-
  #           pip3 install certifi &&
  #           git clean -fxd build

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: wheels
  #         path: ./wheelhouse/*.whl
  #       continue-on-error: true
