name: Build and deploy

on:
  push:
    branches: [publish-workflow]
  release:
    types: [published]

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Build sdist
        run: |
          pipx run build --sdist

      - name: Test sdist
        run: |
          pip install pytest 
          pip install dist/*.tar.gz
          pytest tests/integration -v

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, macos-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
        env:
          MACOSX_DEPLOYMENT_TARGET: 12.0
        if: matrix.os != 'macos-10.15'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
        env:
          CC: /usr/local/bin/gcc-10
          CIBW_ARCHS_MACOS: "x86_64"
          MACOSX_DEPLOYMENT_TARGET: 10.9
        if: matrix.os == 'macos-10.15'

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: ./dist

      - name: Upload artifacts to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install -U twine
          # twine upload dist/*
